{% extends "BWCMSBundle:Common:default.html.twig" %}

{% block title %}Navigation Manager{% endblock %}
{% block pageTitle %}
    <h1>Navigation Manager</h1>
{% endblock %}

{% block header %}
    <link rel="stylesheet" href="{{ asset('bundles/bwcms/datatable/css/jquery.dataTables.min.css') }}"/>
    <link rel="stylesheet" href="{{ asset('bundles/bwcms/jstree/themes/default/style.min.css') }}"/>
{% endblock %}

{% block body %}
    <div class="row">
        <div class="col-md-3 mediaPageLeft">
            <div id="jstree_div"></div>
        </div>
        <div class="col-md-9 mediaPageRight">
            <input type="hidden" id="selectedContentFolderId" value="{{ parentId }}">
            <table id="contentTable" class="table" border="0">
                <thead>
                <tr>
                    <th width="32">Icon</th>
                    <th>Filename</th>
                    <th width="200">Date</th>
                    <th width="100">Action</th>
                </tr>
                </thead>
            </table>
        </div>
    </div>

    <script language="JavaScript">
        var createURL = '{{ url('content_create') }}';
        var sortStartPosition, sortEndPosition = 0;
        var ajaxRequestActive = false;
        $(document).ready(function () {
            var contentTable = $('#contentTable').DataTable({
                ordering: false,
                processing: true,
                serverSide: true,
                drag: true,
                select: true,
                ajax: {
                    url: "{{ url('content_table_data') }}",
                    type: 'GET',
                    'data': function (params) {
                        params.parent = $("#selectedContentFolderId").val();
                        return params;
                    },
                    complete:function(e,d){
//                        console.log('json');
//                        console.log(e.responseJSON);
                    }
                },
                columns: [
                    {data: "thumbnail"},
                    {data: "title"},
                    {data: "createdDate"},
                    {
                        data: null,
                        className: "center",
                        render: function (data, type, full, meta) {
                            var ret = '<button type="button" class="btn btn-primary edit"><i class="glyphicon glyphicon-pencil"></i></button>';
                            ret = ret + ' <button type="button" class="btn btn-danger remove"><i class="glyphicon glyphicon-remove"></i></a>';
                            return ret;
                        }
                    }
                ],
                fnDrawCallback: function (oSettings) {
                    $('#contentTable button.edit').click(function (e) {
                        var editURL = '{{ url('content_edit') }}';
                        var contentId = $(this).parents('tr').attr('id');
                        window.location = editURL + '?contentId=' + contentId;
                        e.preventDefault();
                        return false;
                    });
                }
            });
            $('#contentTable').on('draw.dt', function (e, settings) {
                var parent = $("#selectedContentFolderId").val();
                if (parent == '' || parent == 'Root') {
                    try {
                        $("#contentTable tbody").sortable('destroy');
                    } catch (err) {
                    }
                } else {
                    $("#contentTable tbody").sortable({
                        start: function (event, ui) {
                            sortStartPosition = ui.item.prevAll().length;
                        },
                        update: function (event, ui) {
                            if (ajaxRequestActive) {
                                $("#contentTable tbody").sortable("cancel");
                                return;
                            }
                            sortEndPosition = ui.item.prevAll().length;
                            var contentId = ui.item.first().attr('id');
                            var request = $.ajax({
                                method: "POST",
                                url: "{{ url('content_sort') }}",
                                data: {start: sortStartPosition, end: sortEndPosition, contentId: contentId},
                                beforeSend: function () {
                                    ajaxRequestActive = true;
                                },
                                error: function (xhr, ajaxOptions, thrownError) {
                                    ajaxRequestActive = false;
                                    $("#contentTable tbody").sortable("cancel");
                                    alert(xhr.responseText);
                                },
                                complete: function () {
                                    ajaxRequestActive = false;
                                }
                            });
                        }
                    });
                }

            });
            $('#jstree_div').jstree({
                'core': {
                    'data': {{ jsNodes|raw }},
                    'check_callback': true
                },
                'contextmenu': {
                    'items': function (node, treeObj) {
                        return {
                            "Create": {
                                "separator_before": false,
                                "separator_after": false,
                                "label": "Create",
                                "icon": "glyphicon glyphicon-file",
                                "submenu": {
                                    {% for typeKey,type in contentTypes %}
                                    "{{ typeKey }}": {
                                        "label": "{{ type.name }}",
                                        "icon": "glyphicon glyphicon-plus",
                                        "action": function () {
                                            window.location = createURL + '?parent=' + node.id + '&type={{ type.type }}&schema={{ type.schema }}';
                                            return false;
                                        }
                                    },
                                    {% endfor %}
                                }
                            }
                        }
                    }
                },
                'plugins': ['contextmenu']
            });
            $('#jstree_div').on('select_node.jstree', function (node, selected, event) {
                $("#selectedContentFolderId").val(selected.node.id);
                contentTable.ajax.reload();
            });
        });
    </script>
{% endblock %}

{% block footer %}
    <script src="{{ asset('bundles/bwcms/datatable/js/jquery.dataTables.min.js') }}"></script>
    <script src="{{ asset('bundles/bwcms/jstree/jstree.min.js') }}"></script>
{% endblock %}