{% extends "BWCMSBundle:Common:default.html.twig" %}

{% block title %} {{ title }} {% endblock %}
{% block pageTitle %}
    <h1>{{ title }}</h1>
{% endblock %}

{% block header %}
    <link rel="stylesheet" href="{{ asset('bundles/bwcms/dropzone/dropzone.min.css') }}"/>
    <link rel="stylesheet" href="{{ asset('bundles/bwcms/datatable/css/jquery.dataTables.min.css') }}"/>
    <link rel="stylesheet" href="{{ asset('bundles/bwcms/jstree/themes/default/style.min.css') }}"/>
    <link rel="stylesheet" href="{{ asset('bundles/bwcms/lightbox/ekko-lightbox.min.css') }}"/>
{% endblock %}

{% block body %}
    <div class="row">
        <div class="col-md-3 mediaPageLeft">
            <div id="jstree_div"></div>
        </div>
        <div class="col-md-9 mediaPageRight">
            <input type="hidden" id="selectedContentFolderId" value="{{ parentId }}">
            <table id="contentTable" class="table" border="0">
                <thead>
                <tr>
                    <th width="32">Icon</th>
                    <th>Filename</th>
                    <th width="200">Date</th>
                    <th width="200">Action</th>
                </tr>
                </thead>
            </table>
        </div>
    </div>

    {% if mediaContentTypes %}
        <!-- Modal -->
        <div class="modal fade bs-example-modal-lg" id="uploadModel" tabindex="-1" data-backdrop="static"
             data-keyboard="false" role="dialog"
             aria-labelledby="uploadModelLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" id="uploadModelCloseButton" class="close"><span
                                    aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="uploadModelLabel">
                            Upload File
                            <span class="btn btn-success fileinput-button dz-clickable"><i
                                        class="glyphicon glyphicon-plus"></i><span>Add files...</span></span>
                        </h4>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" id="uploadContentParentId" value="">
                        <input type="hidden" id="uploadContentType" value="">
                        <input type="hidden" id="uploadContentSchema" value="">

                        <div id="fileUploaderPreviews">
                        </div>
                        <div style="display: none;" id="fileUploaderTemplate">
                            <table border="1" width="100%" cellpadding="5">
                                <tr>
                                    <td width="100"><img data-dz-thumbnail/></td>
                                    <td align="left">
                                        <h5 class="name" data-dz-name></h5>
                                        Size: <span class="size" data-dz-size></span>

                                        <div class="progress progress-striped active" role="progressbar"
                                             aria-valuemin="0"
                                             aria-valuemax="100" aria-valuenow="0">
                                            <div class="progress-bar progress-bar-success" style="width:0%;"
                                                 data-dz-uploadprogress></div>
                                        </div>
                                        <strong class="error text-danger" data-dz-errormessage></strong>
                                    </td>
                                    <td align="center">
                                        <button data-dz-remove class="btn btn-warning cancel">
                                            <i class="glyphicon glyphicon-ban-circle"></i>
                                        </button>
                                        <button data-dz-remove class="btn btn-danger delete">
                                            <i class="glyphicon glyphicon-trash"></i>
                                        </button>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    {% endif %}

    <script language="JavaScript">
        var createURL = '{{ url('content_create') }}';
        var sortStartPosition, sortEndPosition = 0;
        var ajaxRequestActive = false;
        $(document).ready(function () {
            var contentTable = $('#contentTable').DataTable({
                ordering: false,
                processing: true,
                serverSide: true,
                drag: true,
                select: true,
                ajax: {
                    url: "{{ url('content_table_data') }}",
                    type: 'GET',
                    'data': function (params) {
                        params.type = '{{ type }}';
                        params.parent = $("#selectedContentFolderId").val();
                        return params;
                    },
                    complete: function (e, d) {
//                        console.log('json');
//                        console.log(e.responseJSON);
                    }
                },
                columns: [
                    {data: "thumbnail"},
                    {data: "title"},
                    {data: "createdDate"},
                    {
                        data: null,
                        className: "center",
                        render: function (data, type, full, meta) {
                            console.log(data);
                            var ret = '<button type="button" class="btn btn-primary edit"><i class="glyphicon glyphicon-pencil"></i></button>';
                            if (data.download.length > 0) {
                                ret = ret + ' <button type="button" class="btn btn-primary download" data-url="' + data.download + '"><i class="glyphicon glyphicon-download-alt"></i></button>';
                            }
                            //ret = ret + ' <button type="button" class="btn btn-danger remove"><i class="glyphicon glyphicon-remove"></i></a>';
                            return ret;
                        }
                    }
                ],
                fnDrawCallback: function (oSettings) {
                    $('#contentTable button.edit').click(function (e) {
                        var editURL = '{{ url('content_edit') }}';
                        var contentId = $(this).parents('tr').attr('id');
                        window.location = editURL + '?contentId=' + contentId;
                        e.preventDefault();
                        return false;
                    });
                    $('#contentTable a.lightBox').click(function (e) {
                        e.preventDefault();
                        $(this).ekkoLightbox();
                    });
                    $('#contentTable button.download').click(function (e) {
                        console.log($(this).data('url'));
                        window.location = $(this).data('url');
                        return false;
                    });
                    $('#contentTable button.remove').click(function (e) {
                        var contentId = $(this).parents('tr').attr('id');
                        bootbox.confirm("Do you want to delete the selected item?", function (result) {
                            var request = $.post("{{ url('content_delete') }}", {
                                contentId: contentId
                            });
                            request.done(function (data) {
                                contentTable.ajax.reload(null,false);
                            });
                            request.fail(function () {
                                alert('Unable to delete media');
                            });
                        });
                    });
                }
            });
            $('#contentTable').on('draw.dt', function (e, settings) {
                var parent = $("#selectedContentFolderId").val();
                if (parent == '' || parent == 'Root') {
                    try {
                        $("#contentTable tbody").sortable('destroy');
                    } catch (err) {
                    }
                } else {
                    $("#contentTable tbody").sortable({
                        start: function (event, ui) {
                            sortStartPosition = ui.item.prevAll().length;
                        },
                        update: function (event, ui) {
                            if (ajaxRequestActive) {
                                $("#contentTable tbody").sortable("cancel");
                                return;
                            }
                            sortEndPosition = ui.item.prevAll().length;
                            var contentId = ui.item.first().attr('id');
                            var request = $.ajax({
                                method: "POST",
                                url: "{{ url('content_sort') }}",
                                data: {start: sortStartPosition, end: sortEndPosition, contentId: contentId},
                                beforeSend: function () {
                                    ajaxRequestActive = true;
                                },
                                error: function (xhr, ajaxOptions, thrownError) {
                                    ajaxRequestActive = false;
                                    $("#contentTable tbody").sortable("cancel");
                                    alert(xhr.responseText);
                                },
                                complete: function () {
                                    ajaxRequestActive = false;
                                }
                            });
                        }
                    });
                }

            });
            {% if mediaContentTypes %}
            var previewNode = document.querySelector("#fileUploaderTemplate");
            var previewTemplate = previewNode.innerHTML;
            $('#fileUploaderTemplate').remove();
            var myDropZone = new Dropzone('div#uploadModel', {
                url: "{{ url('content_media_upload') }}",
                thumbnailWidth: 100,
                thumbnailHeight: 100,
                parallelUploads: 3,
                previewTemplate: previewTemplate,
                autoQueue: true,
                previewsContainer: "#fileUploaderPreviews",
                clickable: ".fileinput-button"
            });
            myDropZone.on("success", function (file) {
                setTimeout(function () {
                    myDropZone.removeFile(file);
                }, 1500);
            });
            myDropZone.on("sending", function (file, xhr, formData) {
                formData.append('parent', $("#uploadContentParentId").val());
                formData.append('type', $("#uploadContentType").val());
                formData.append('schema', $("#uploadContentSchema").val());
            });
            myDropZone.on("queuecomplete", function (progress) {
                contentTable.ajax.reload();
            });
            $('#uploadModelCloseButton').click(function () {
                if (myDropZone.getUploadingFiles().length === 0 && myDropZone.getQueuedFiles().length === 0) {
                    $('#uploadModel').modal('hide');
                }
            });
            {% endif %}
            $('#jstree_div').jstree({
                'core': {
                    'data': {{ jsNodes|raw }},
                    'check_callback': true
                },
                'contextmenu': {
                    'items': function (node, treeObj) {
                        return {

                            "Create": {
                                "separator_before": false,
                                "separator_after": false,
                                "label": "Create",
                                "icon": "glyphicon glyphicon-file",
                                "submenu": {
                                    {% for typeKey,type in contentTypes %}
                                    "{{ typeKey }}": {
                                        "label": "{{ type.name }}",
                                        "icon": "glyphicon glyphicon-plus",
                                        "_disabled": function () {
                                            var isRootItem = {{ type.isRootItem ? 'true' : 'false' }};
                                            if (node.parent == '#' && !isRootItem) {
                                                return true;
                                            }
                                            return false;
                                        },
                                        "action": function () {
                                            window.location = createURL + '?parent=' + node.id + '&type={{ type.type }}&schema={{ type.schema }}';
                                            return false;
                                        }
                                    },
                                    {% endfor %}
                                }
                            }
                            {% if mediaContentTypes %}
                            , "Upload": {
                                "separator_before": false,
                                "separator_after": false,
                                "label": "Upload",
                                "icon": "glyphicon glyphicon-file",
                                "submenu": {
                                    {% for typeKey,type in mediaContentTypes %}
                                    "{{ typeKey }}": {
                                        "label": "{{ type.name }}",
                                        "icon": "glyphicon glyphicon-plus",
                                        "_disabled": function () {
                                            var isRootItem = {{ type.isRootItem ? 'true' : 'false' }};
                                            if (node.parent == '#' && !isRootItem) {
                                                return true;
                                            }
                                            return false;
                                        },
                                        "action": function () {
                                            $("#uploadContentParentId").val(node.id);
                                            $("#uploadContentType").val('{{ type.type }}');
                                            $("#uploadContentSchema").val('{{ type.schema }}');
                                            $('#uploadModel').modal('show');
                                            return false;
                                        }
                                    },
                                    {% endfor %}
                                }
                            }
                            {% endif %}
                        }
                    }
                },
                'plugins': ['contextmenu']
            });
            $('#jstree_div').on('select_node.jstree', function (node, selected, event) {
                $("#selectedContentFolderId").val(selected.node.id);
                contentTable.ajax.reload();
            });
        });
    </script>
{% endblock %}

{% block footer %}
    <script src="{{ asset('bundles/bwcms/dropzone/dropzone.min.js') }}"></script>
    <script src="{{ asset('bundles/bwcms/datatable/js/jquery.dataTables.min.js') }}"></script>
    <script src="{{ asset('bundles/bwcms/jstree/jstree.min.js') }}"></script>
    <script src="{{ asset('bundles/bwcms/lightbox/ekko-lightbox.min.js') }}"></script>
{% endblock %}